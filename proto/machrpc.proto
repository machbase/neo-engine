syntax = "proto3";

package machrpc;

option go_package = "github.com/machbase/dbms-mach-go/machrpc";

import "google/protobuf/any.proto";

service Machbase {
    rpc Exec(ExecRequest) returns(ExecResponse) {}
    rpc Append(stream AppendRequest) returns(AppendResponse) {}
    rpc QueryRow(QueryRowRequest) returns(QueryRowResponse) {}
    rpc Query(QueryRequest) returns(QueryResponse) {}
    rpc RowsFetch(RowsHandle) returns(RowsFetchResponse) {}
    rpc RowsClose(RowsHandle) returns (RowsCloseResponse) {}
}

message ExecRequest {
    string Sql = 1;
    repeated google.protobuf.Any Params = 2;
}

message ExecResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message AppendRequest {

}

message AppendResponse {

}

message QueryRequest {
    string sql = 1;
    repeated google.protobuf.Any params = 2;
}

message QueryResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    RowsHandle rowsHandle = 4;
}

message RowsHandle {
    string handle = 1;
}

message RowsFetchResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    bool hasNoRows = 4;
    repeated google.protobuf.Any values = 5;
}

message RowsCloseResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
}

message QueryRowRequest {
    string sql = 1;
    repeated google.protobuf.Any params = 2;
}

message QueryRowResponse {
    bool success = 1;
    string reason = 2;
    string elapse = 3;
    repeated google.protobuf.Any values = 4;
}